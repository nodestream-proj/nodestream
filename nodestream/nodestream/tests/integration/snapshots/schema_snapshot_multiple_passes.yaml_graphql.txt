

type Country @exclude(operations: [CREATE, DELETE, UPDATE]) @queryOptions(limit: {default: 10})  {
    # Node Properties

    name: String

    last_ingested_at: DateTime

    # Inbound Relationships

    
    playerOriginatesFrom: [Player!]!
        @relationship(type: "ORIGINATES_FROM", direction: IN, properties: "OriginatesFrom")
    

    
    personHailsFrom: [Person!]!
        @relationship(type: "HAILS_FROM", direction: IN, properties: "HailsFrom")
    

    # Outbound Relationships

}

type Person @exclude(operations: [CREATE, DELETE, UPDATE]) @queryOptions(limit: {default: 10})  {
    # Node Properties

    person_id: String

    name: String

    age: String

    last_ingested_at: DateTime

    # Inbound Relationships

    # Outbound Relationships

    
    hailsFromCountry: Country
        @relationship(type: "HAILS_FROM", direction: OUT, properties: "HailsFrom")
    

}

type Player @exclude(operations: [CREATE, DELETE, UPDATE]) @queryOptions(limit: {default: 10})  {
    # Node Properties

    player_id: String

    name: String

    overall: String

    hits: String

    age: String

    potential: String

    last_ingested_at: DateTime

    # Inbound Relationships

    # Outbound Relationships

    
    originatesFromCountry: Country
        @relationship(type: "ORIGINATES_FROM", direction: OUT, properties: "OriginatesFrom")
    

}
interface OriginatesFrom @relationshipProperties {

    last_ingested_at: DateTime

}
interface HailsFrom @relationshipProperties {

    last_ingested_at: DateTime

}
