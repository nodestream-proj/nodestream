[tool.poetry]
name = "nodestream"
version = "0.8.3"
description = "A Fast, Declarative ETL for Graph Databases."
license = "GPL-3.0-only"
authors = [
    "Zach Probst <Zach_Probst@intuit.com>"
]
readme = "README.md"

homepage = "https://github.com/nodestream-proj/nodestream"
repository = "https://github.com/nodestream-proj/nodestream"
documentation = "https://nodestream-proj.github.io/nodestream"

keywords = ["etl", "neo4j", "declarative", "data", "kafka", "ingest"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Natural Language :: English",
    "Topic :: Database"
]
packages = [ { include = "nodestream" } ]

[tool.isort]
profile = "black"

[tool.poetry.dependencies]
python = "^3.10"
pyyaml = "^6.0"
jmespath = "^1.0.1"
jq = "^1.4.1"
neo4j = "^5.8.0"
cleo = "^2.0.1"
python-json-logger = "^2.0.4"
cymple = "0.8.1"
boto3 = "^1.26.137"
aiokafka = "^0.8.0"
Jinja2 = "^3"
pandas = "^2"
schema = "^0.7.5"
cookiecutter = "^2.1.1"
httpx = "^0.24.1"
uvloop = "^0.17.0"
testcontainers = {extras = ["neo4j"], version = "^3.7.1"}

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.8"
mkdocs-gen-files = "^0.5.0"
mkdocstrings = {version = "^0.22.0", extras = ["python"]}
mike = "^1.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
black = "^23.3.0"
pyhamcrest = "^2.0.4"
isort = "^5.12.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
freezegun = "^1.2.2"
moto = {version = "^4.1.10", extras = ["s3"]}
ruff = "^0.0.270"
pytest-snapshot = "^0.9.0"
pytest-httpx = "^0.23.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "integration: marks the test as an integration test (deselect with '-m \"not integration\"')",
    "e2e: marks the test as an end-to-end test (deselect with '-m \"not e2e\"')",
]

[tool.poetry.scripts]
nodestream = 'nodestream.cli.application:run'

# To prevent the "builin" stuff being a special case of plugins,
# nodestream just considers itself a plugin for all of the things that are pluggable.
[tool.poetry.plugins."nodestream.plugins"]
"argument_resolvers" = "nodestream.pipeline.argument_resolvers"
"file_formats" = "nodestream.pipeline.extractor.files"
"interpretations" = "nodestream.interpreting.interpretations"
"normalizers" = "nodestream.pipeline.normalizers"
"value_providers" = "nodestream.pipeline.value_providers"   
"record_formats" = "nodestream.extractors.streams"
"stream_connectors" = "nodestream.extractors.streams"
"commands" = "nodestream.cli.commands"                      
"audits" = "nodestream.project.audits"                      
"schema_printers" = "nodestream.schema.printers"
"databases" = "nodestream.databases.neo4j"

[tool.ruff]
ignore = ["E501"]
